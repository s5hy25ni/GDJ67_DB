-- DML 데이터 조작 언어
-- SELECT , INSERT, DELETE, UPDATE

CREATE TABLE INFO(
	SEQ NUMBER,
	NAME VARCHAR2(50) NOT NULL,
	PHONE VARCHAR2(20),
	AUTH CHAR(1),
	REGDATE DATE NOT NULL
);

ALTER TABLE INFO 
	ADD CONSTRAINT INFO_PK
	PRIMARY KEY (SEQ);
	
-- SQUENCE TABLE 무결성 제약조건을 위한 순차적으로 증가되는 번호를 반환하는 TABLE
-- CREATE SEQUENCE, DROP SEQUENCE
CREATE SEQUENCE INFO_SEQ START WITH 1 INCREMENT BY 1;

-- SEQUENCE TABLE 사용방법
-- SESSION : NEXTVAL을 통해서 SESSION을 생성한 후 CURRVAL을 통해서 값을 가져올 수 있음
-- NEXTVAL : 다음 값을 가져올 때
-- CURRVAl : SEQUENCE 테이블의 현재 값을 가져 올 때

-- DUAL은 문법을 맞추기 위한 더미 테이블
-- MS SQL은 FROM절이 없어도 자동으로 동작
-- DUAL은 공집합인 경우 X로 출력
SELECT INFO_SEQ.NEXTVAL, INFO_SEQ.CURRVAL
	FROM DUAL;
	
SELECT INFO_SEQ.CURRVAL
	FROM DUAL;
	
SELECT *
	FROM INFO i ;
	
INSERT INTO INFO i 
	VALUES(INFO_SEQ.NEXTVAl, 'KOKOA', '00700', 'U', SYSDATE);
	
SELECT MAX(SEQ)+1 
	FROM INFO i ;
	
INSERT INTO INFO i 
	VALUES((SELECT MAX(SEQ)+1 
				FROM INFO i),
			'BANANA','00300','A',SYSDATE);
			
INSERT INTO INFO i 
	VALUES((SELECT MAX(SEQ)+1 
				FROM INFO i),
			'BANANA','00300','A',SYSDATE);
			
		
-- DML DELETE 
-- DDL TRUNCATE TABLE
TRUNCATE TABLE INFO;


SELECT SYSDATE, CURRENT_DATE , CURRENT_TIMESTAMP , 
	'맑음' AS 날씨,
	'눈' AS "눈 SNOW",
	1 값
	FROM DUAL;

-- DEFAULT 적용
ALTER TABLE INFO MODIFY (AUTH DEFAULT 'U');

INSERT INTO INFO i (SEQ, NAME, REGDATE)
	VALUES (INFO_SEQ.NEXTVAL, 'TOMATO', SYSDATE);
	
SELECT *
	FROM INFO i ;
	
-- 182 page 선수 테이블의 박지성 선수의 데이터를 입력
-- PLAYER 테이블에 정보를 입력해보세요.
INSERT INTO PLAYER p2 
	(PLAYER_ID, PLAYER_NAME, TEAM_ID, "POSITION", HEIGHT, WEIGHT, BACK_NO)
	VALUES ('2002007', '박지성', 'K07','MF', 178,73,7);
SELECT *
	FROM PLAYER p 
	WHERE PLAYER_NAME = '박지성';
	
INSERT INTO PLAYER p (PLAYER_ID, PLAYER_NAME, TEAM_ID)
	VALUES((SELECT MAX(PLAYER_ID)+1
			FROM PLAYER p2),
			'코코아',
			'K01');
SELECT *
	FROM PLAYER p 
	WHERE PLAYER_ID =(SELECT MAX(PLAYER_ID)
					FROM PLAYER p2 );
					
-- 축구선수들의 정보를 출력 선수이름, 닉네임, 등번호, 포지션, 팀명
-- 팀명이 현대 모터스
SELECT *
	FROM TEAM t 
	WHERE TEAM_NAME LIKE '현____';

SELECT PLAYER_NAME , NICKNAME , BACK_NO , "POSITION" , TEAM_NAME
	FROM PLAYER p JOIN TEAM t 
	ON p.TEAM_ID = t.TEAM_ID 
	WHERE t.TEAM_ID = 'K05';
	
-- 출력된 결과에 경기장 명도 출력
SELECT PLAYER_NAME , NICKNAME , BACK_NO , "POSITION" , TEAM_NAME,(SELECT STADIUM_NAME 
	FROM STADIUM s JOIN TEAM t 
	ON s.HOMETEAM_ID = t.TEAM_ID 
	WHERE t.TEAM_ID ='K05')
	FROM PLAYER p JOIN TEAM t 
	ON p.TEAM_ID = t.TEAM_ID 
	WHERE t.TEAM_ID = 'K05';
	
SELECT STADIUM_NAME 
	FROM STADIUM s JOIN TEAM t 
	ON s.HOMETEAM_ID = t.TEAM_ID 
	WHERE t.TEAM_ID ='K05';

SELECT PLAYER_NAME , NICKNAME , BACK_NO , "POSITION" , TEAM_NAME, STADIUM_NAME
	FROM PLAYER p JOIN TEAM t 
	ON p.TEAM_ID = t.TEAM_ID
	JOIN STADIUM s 
	ON t.STADIUM_ID = s.STADIUM_ID 
	WHERE t.TEAM_ID = 'K05'
	AND HEIGHT > 190;

-- TCL : COMMIT, ROLLBACK
-- COMMIT : 수정 혹은 변경된 결과를 database에 적용
-- ROLLBACK : 수정 혹은 변경된 결과를 취소

SELECT *
	FROM EMP_COPY ec 
	WHERE JOB = 'CLERK';

DELETE FROM EMP_COPY ec  
	WHERE JOB = 'CLERK';
	
ROLLBACK;

-- 시험준비 TCL

SAVEPOINT SVP1;

INSERT INTO PLAYER p (PLAYER_ID, PLAYER_NAME, TEAM_ID)
	VALUES ('2023052','KOKOA','K05');
	
SAVEPOINT SVP2;

UPDATE PLAYER SET BACK_NO = '77';

SAVEPOINT SVP3;

DELETE FROM PLAYER p ;

SELECT * FROM PLAYER p ;

SELECT * FROM PLAYER p 
	WHERE PLAYER_NAME = 'KOKOA';

ROLLBACK TO SVP3;
ROLLBACK TO SVP2;
ROLLBACK TO SVP1;