SELECT * 
	FROM EMP e ;
SELECT *
	FROM DEPT d ;
SELECT *
	FROM SALGRADE s ;
	
-- 1일차
-- 1번
SELECT EMPNO, ENAME
	FROM EMP e 
	WHERE EMPNO IN ('7369', '7698');
	
-- 2번
SELECT EMPNO, ENAME
	FROM EMP e 
	WHERE NOT EMPNO IN ('7369', '7698');
	
-- 3번
SELECT EMPNO, ENAME, JOB, MGR, 
	TO_CHAR( HIREDATE , 'YYYY/MM/DD hh24:mm:ss'), 
	SAL , COMM , DEPTNO 
	FROM EMP e 
	WHERE SAL BETWEEN 3000 AND 5000;
	
-- 4번
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE , SAL , COMM , DEPTNO 
	FROM EMP e 
	WHERE TO_CHAR(HIREDATE, 'YYYY-MM-DD') > '1981-12-01';
	
-- 5번
SELECT MAX(EMPNO) EMPNO
	FROM EMP e 
	WHERE JOB='SALESMAN';
	
-- 2일차
-- 1번
SELECT DNAME, e.EMPNO, ENAME
	FROM EMP e JOIN DEPT d 
	USING(DEPTNO)
	ORDER BY DNAME, ENAME;
	
-- 2번
SELECT DNAME, e.EMPNO, ENAME
	FROM EMP e JOIN DEPT d 
	USING(DEPTNO)
UNION
SELECT NULL, e.EMPNO, ENAME
	FROM EMP e 
	WHERE DEPTNO IS NULL
	ORDER BY DNAME, ENAME;

SELECT DNAME, e.EMPNO, ENAME
	FROM EMP e , DEPT d 
	WHERE e.DEPTNO = d.DEPTNO(+)
	ORDER BY DNAME, ENAME;
	
-- 3번
SELECT LOC, EMPNO, ENAME
	FROM EMP e JOIN DEPT d 
	USING(DEPTNO)
	WHERE LOC IN ('DALLAS', 'CHICAGO')
	ORDER BY LOC DESC, ENAME;

-- 4번
SELECT DEPTNO, MAX(SAL) SAL
	FROM EMP e 
	WHERE DEPTNO IS NOT NULL
	GROUP BY DEPTNO
	ORDER BY DEPTNO;
	
-- 5번
SELECT e2.DEPTNO, e2.SAL, EMPNO, ENAME, JOB
	FROM EMP e  JOIN (SELECT DEPTNO, MAX(SAL) SAL
									FROM EMP e 
									WHERE DEPTNO IS NOT NULL
									GROUP BY DEPTNO) e2
	ON e2.SAL = e.SAL
	ORDER BY DEPTNO;

SELECT DEPTNO, SAL, EMPNO, ENAME, JOB
	FROM EMP e 
	WHERE (e.DEPTNO , SAL) IN (SELECT DEPTNO, MAX(SAL)
													FROM EMP e2 
													GROUP BY DEPTNO	)
	ORDER BY DEPTNO;

SELECT DEPTNO, SAL, EMPNO, ENAME, JOB 
	FROM EMP e
	WHERE e.SAL = (SELECT MAX(SAL)
									FROM EMP e2
									WHERE e.DEPTNO =e2.DEPTNO 
										)
	ORDER BY 1;

-- 3일차
-- 1번
SELECT EMPNO, ENAME, SAL, GRADE 
	FROM EMP e JOIN SALGRADE s 
	ON SAL BETWEEN s.LOSAL AND s.HISAL 
	ORDER BY s.GRADE ;
	
-- 2번
SELECT EMPNO, ENAME, JOB, SAL
	FROM EMP e,( SELECT AVG(e2.SAL) AVG
								FROM EMP e2) e3
	WHERE e.SAL > e3.AVG
	ORDER BY SAL DESC;

SELECT EMPNO , ENAME , JOB , SAL 
	FROM EMP e 
	WHERE SAL > (SELECT AVG(SAL)
													FROM EMP e2)
	ORDER BY SAL DESC;

-- inline veiw
SELECT EMPNO, ENAME, JOB, SAL
	FROM EMP e CROSS JOIN (SELECT AVG(SAL) AVGSAL
										FROM EMP) e2
	WHERE e.SAL> e2.AVGSAL
	ORDER BY SAL DESC;

-- 3번
SELECT DNAME, EMPNO, ENAME, JOB, SAL
	FROM EMP e, DEPT d ,(SELECT DEPTNO, AVG(SAL) AVG
									FROM EMP e2 
									GROUP BY DEPTNO) e3
	WHERE	e.DEPTNO = d.DEPTNO 
		AND e.DEPTNO = e3.DEPTNO
		AND SAL > e3.AVG
	ORDER BY SAL DESC;

-- 연관서브쿼리
SELECT DNAME, e.EMPNO, ENAME, JOB, SAL
	FROM EMP e JOIN DEPT d 
	ON e.DEPTNO = d.DEPTNO 
	WHERE SAL > (SELECT AVG(SAL)
								FROM EMP e2
								WHERE e.DEPTNO = e2.DEPTNO)
	ORDER BY SAL DESC;

SELECT *
	FROM (SELECT DNAME, EMPNO, ENAME, JOB, SAL, AVG(SAl) OVER(PARTITION BY DEPTNO) AVGSAL
					FROM EMP e JOIN DEPT d 
					USING(DEPTNO)) ee
	WHERE ee.SAL > ee.AVGSAL
ORDER BY SAL DESC;

-- 4번
SELECT GRADE , LOSAL , HISAL , COUNT(*) CNT
	FROM EMP e JOIN SALGRADE s 
	ON SAL BETWEEN s.LOSAL AND s.HISAL 
	GROUP BY (GRADE , LOSAL, HISAL);

-- 5번
SELECT DNAME,LOC, EMPNO, ENAME
	FROM EMP e JOIN DEPT d 
	USING(DEPTNO)
	WHERE DNAME = 'RESEARCH'
		OR LOC = 'NEW YORK'
	ORDER BY DNAME;

-- 4일차
-- 1번
SELECT e2.EMPNO EMPNO, ENAME, JOB, MGR, HIREDATE , e2.SAL SAL, COMM, DEPTNO
	FROM EMP e, (SELECT EMPNO, SAL , 
								RANK() OVER(ORDER BY SAL DESC) R
								FROM EMP e1 
								ORDER BY SAL DESC) e2 
	WHERE e.EMPNO = e2.EMPNO
		AND e2.R < 6;
	
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
	FROM (SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
					FROM EMP
					ORDER BY SAL DESC)
	WHERE ROWNUM <6

-- 2번
SELECT e.EMPNO, ENAME , JOB , MGR , HIREDATE , SAL , COMM, DEPTNO, e3.RN
	FROM EMP e ,(SELECT EMPNO, 
								RANK() OVER(ORDER BY SAL DESC) RN
								FROM EMP e2) e3
	WHERE e.EMPNO = e3.EMPNO
		AND e3.RN >5 AND e3.RN < 11;
	
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO,RN
	FROM (
					SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO,
									ROW_NUMBER() OVER(ORDER BY SAL DESC) RN
					FROM EMP)
	WHERE RN BETWEEN 6 AND 10;

SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO, RN
	FROM(	
					SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO, ROWNUM RN
					FROM (
								SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
								FROM EMP
								ORDER BY SAL DESC, ENAME DESC
								)
				)
	WHERE RN BETWEEN 6 AND 10;

-- 3번
-- SELECT문의 실행 순서는 FROM -> WHERE -> SELECT 이기 때문에 WHERE에서 ROWNUM을 사용할 수 없다.
-- ROWNUM은 SELECT의 결과에 따라 동적으로 부여되는 번호이기 때문에
-- 쿼리문에서 처음 데이터가 들어갔을 때 ROWNUM은 1이기 때문에 ROWNUM이 5보다 크다는 조건을 만족할 수 없다.
-- 따라서 뷰에 데이터가 추가되지 않기 때문에 ROWNUM에도 변화가 없음
	
-- 4번
SELECT 
	MAX(CASE GRADE WHEN 1 THEN LOSAL || '~' || HISAL END) GRADE_1,
	MAX(CASE GRADE WHEN 2 THEN LOSAL || '~' || HISAL END) GRADE_2,
	MAX(CASE GRADE WHEN 3 THEN LOSAL || '~' || HISAL END) GRADE_3,
	MAX(CASE GRADE WHEN 4 THEN LOSAL || '~' || HISAL END) GRADE_4,
	MAX(CASE GRADE WHEN 5 THEN LOSAL || '~' || HISAL END) GRADE_5
	FROM SALGRADE s  ;

-- 5번
CREATE TABLE SALGRADE_TEMP(
	GRADE_1 VARCHAR2(30),
	GRADE_2 VARCHAR2(30),
	GRADE_3 VARCHAR2(30),
	GRADE_4 VARCHAR2(30),
	GRADE_5 VARCHAR2(30)
);

INSERT INTO SALGRADE_TEMP VALUES('700~1200','1201~1400','1401~2000','2001~3000','3001~9999');

SELECT 1 GRADE, GRADE_1
	FROM SALGRADE_TEMP 
UNION
SELECT 2, GRADE_2
	FROM SALGRADE_TEMP 
UNION
SELECT 3, GRADE_3
	FROM SALGRADE_TEMP
UNION
SELECT 4, GRADE_4
	FROM SALGRADE_TEMP 
UNION
SELECT 5, GRADE_5
	FROM SALGRADE_TEMP ;

SELECT *
	FROM SALGRADE_TEMP st ;

SELECT GRADE,
				DECODE(GRADE, 1, GRADE_1, 2, GRADE_2, 3, GRADE_3, 4, GRADE_4, 5, GRADE_5) LOSAL_HISAL
	FROM SALGRADE , SALGRADE_TEMP st2 ;

-- 5일차
-- 1번
SELECT EMPNO, MGR, SAL,
	CASE WHEN (NVL(EMPNO,0) > NVL(MGR,0) AND NVL(EMPNO,0) > NVL(SAL,0)) THEN NVL(EMPNO ,0)
				WHEN (NVL(MGR,0) > NVL(SAL,0)) THEN NVL(MGR,0)
				ELSE NVL(SAL,0)
				END MAX_VALUE,
	CASE WHEN (NVL(SAL,0) < NVL(MGR,0)) AND NVL(SAL,0) < (NVL(EMPNO,0)) THEN NVL(SAL,0)
				WHEN (NVL(MGR,0) < NVL(EMPNO,0)) THEN NVL(MGR,0)
				ELSE NVL(EMPNO,0)
				END MIN_VALUE
	FROM EMP e
	ORDER BY MAX_VALUE DESC;

-- GREATESR LEAST 함수를 사용하여 풀어야 함
SELECT EMPNO, MGR, SAL,
	GREATEST(NVL(EMPNO,0), NVL(MGR,0), NVL(SAL,0)) MAX_VALUE,
	LEAST(NVL(EMPNO,0), NVL(MGR,0), NVL(SAL,0)) MIN_VALUE
	FROM EMP
ORDER BY MAX_VALUE DESC, MIN_VALUE;
	
-- 2번
SELECT DNAME, 
	CASE WHEN LENGTH(DNAME) >= 6 THEN SUBSTR(DNAME, 0, 5) || '..' ELSE DNAME END DATA
	FROM DEPT d ;

SELECT DNAME, RPAD(SUBSTR(DNAME, 1, 5), 7, '..')
	FROM DEPT d;
	
SELECT DNAME, SUBSTR(DNAME, 1, 5) || '..'
	FROM DEPT;

-- 3번
SELECT EMPNO, TO_CHAR(HIREDATE, 'YYYY/MM/DD HH24:MI:SS') HIREDATE,
	TO_CHAR(LAST_DAY(HIREDATE), 'YYYY/MM/DD HH24:MI:SS') HIREDATE_MONTH_LASTDAY,
	TO_DATE('2006-08-05')-TO_DATE(TO_CHAR(HIREDATE,'YYYYMMDD')) WORK_DAY
	FROM EMP;

-- 4번
SELECT e.EMPNO, e.HIREDATE , e.WORK_DAY
	FROM (SELECT EMPNO, HIREDATE,
					TO_DATE('2006-08-05', 'YYYY-MM-DD')-HIREDATE WORK_DAY
					FROM EMP) e
	WHERE e.WORK_DAY = (SELECT MAX(TO_DATE('2006-08-05', 'YYYY-MM-DD')-HIREDATE) WORK_DAY
													FROM EMP);
													
-- 5번
SELECT e.EMPNO, e.HIREDATE , e.WORK_DAY
	FROM (SELECT EMPNO, HIREDATE,
					TO_DATE('2006-08-05', 'YYYY-MM-DD')-HIREDATE WORK_DAY
					FROM EMP) e
	WHERE e.WORK_DAY = (SELECT MAX(TO_DATE('2006-08-05', 'YYYY-MM-DD')-HIREDATE) WORK_DAY
													FROM EMP)
		OR e.WORK_DAY = (SELECT MIN(TO_DATE('2006-08-05', 'YYYY-MM-DD')-HIREDATE) WORK_DAY
													FROM EMP);				
													
-- 6일차
-- 1번
SELECT EMPNO, ENAME, SAL,
	SUM(SAL) OVER(ORDER BY EMPNO RANGE UNBOUNDED PRECEDING) SAL_CUMULATIVE
	FROM EMP;
	
-- 2번
SELECT JOB, ENAME, SAL,
	ROW_NUMBER() OVER(ORDER BY SAL) RANK
	FROM EMP
	WHERE JOB='SALESMAN';
	
-- 3번
SELECT JOB,ENAME,SAL,
	RANK() OVER(ORDER BY SAL) RANK
	FROM EMP 
	WHERE JOB='SALESMAN';
	
-- 4번
SELECT JOB, ENAME, SAL,
	DENSE_RANK() OVER(ORDER BY SAL) RANK
	FROM EMP
	WHERE JOB='SALESMAN';
	
-- 5번
CREATE TABLE EMP_BAK AS SELECT * FROM EMP e ;
SELECT * FROM EMP_BAK;

-- 6번) 5천 건의 테스트데이터
INSERT INTO EMP_BAK eb 
SELECT mm, 'ENAME','JOB', 7839, SYSDATE,CEIL(DBMS_RANDOM.VALUE(10,50))*100,NULL,CEIL(DBMS_RANDOM.VALUE(1,4))*10
   FROM(
SELECT LEVEL mm
   FROM DUAL
   CONNECT BY LEVEL<=5000);

-- 7일차
-- 1번
UPDATE EMP_BAK SET SAL = SAL+400
	WHERE JOB='SALESMAN';

-- 2번
UPDATE EMP_BAK SET HIREDATE = ADD_MONTHS(HIREDATE, +12)
	WHERE SAL > (SELECT AVG(SAL)
									FROM EMP_BAK eb);

-- 3번
UPDATE EMP_BAK SET COMM = NVL(COMM,0)+100,
										SAL = CASE JOB
														WHEN 'CLERK' THEN SAL*2
														WHEN 'MANAGER' THEN SAL*3
														ELSE SAL*4
														END;
													
-- 4번
DELETE FROM EMP_BAK eb 
	WHERE SUBSTR(ENAME,0,1) LIKE 'M%';
				
-- 5번
DELETE FROM EMP_BAK eb2 
	WHERE SAL > (SELECT AVG(SAL)
									FROM EMP_BAK eb2);
								
-- 소속되어 있는 JOB의 평균 급여보다 크다면 삭제
DELETE FROM EMP e2
	WHERE SAL > (SELECT AVG(SAL)
										FROM EMP e1
										WHERE e2.JOB = e1.JOB);
									
-- 8일차
-- 1번
SELECT JOB, COUNT(JOB) CNT, MIN(HIREDATE) FIRST_HIREDATE
	FROM EMP e 
	GROUP BY JOB
	ORDER BY JOB;
	
-- 2번
SELECT TO_CHAR(HIREDATE, 'YYYY-MM') HIREDATE, COUNT(*) CNT
	FROM EMP e 
	GROUP BY TO_CHAR(HIREDATE, 'YYYY-MM');

SELECT HIREDATE, COUNT(*) CNT
	FROM (
					SELECT TO_CHAR(HIREDATE, 'YYYY-MM') HIREDATE
						FROM EMP
					)
	GROUP BY HIREDATE
	ORDER BY 1;
	
-- 3번
SELECT HIREDATE, CNT
	FROM (SELECT TO_CHAR(HIREDATE, 'YYYY-MM') HIREDATE, COUNT(*) CNT
					FROM EMP
					GROUP BY TO_CHAR(HIREDATE, 'YYYY-MM'))
	WHERE CNT>1;

SELECT TO_CHAR(HIREDATE, 'YYYY-MM') HIREDATE, COUNT(*) CNT
	FROM EMP e 
	GROUP BY TO_CHAR(HIREDATE, 'YYYY-MM')
	HAVING COUNT(*) >= 2
	ORDER BY 1;
	
-- 4번
SELECT NVL(DNAME, 'NO DEPT') DNAME, COUNT(*) CNT, SUM(SAL) SAL
	FROM EMP e  JOIN DEPT d 
	ON e.DEPTNO = d.DEPTNO(+)
	GROUP BY DNAME;
	
-- 5번
SELECT e.RN MM, NVL(e2.CNT, 0) CNT
	FROM (SELECT ROWNUM RN
					FROM EMP 
					WHERE ROWNUM<13) e
	LEFT JOIN (SELECT TO_CHAR(HIREDATE, 'MM') MM, COUNT(*) CNT
							FROM EMP 
							GROUP BY TO_CHAR(HIREDATE, 'MM')) e2
	ON e.RN = e2.MM
	ORDER BY e.RN;

SELECT MM, NVL(CNT, 0) CNT
	FROM (
					SELECT TO_CHAR(HIREDATE, 'MM') MM, COUNT(*) CNT
						FROM EMP
						GROUP BY TO_CHAR(HIREDATE, 'MM')
					) t1
					RIGHT JOIN
					(SELECT LEVEL MM
						FROM DUAL
						CONNECT BY LEVEL <= 12)
					USING(MM)
				ORDER BY 1;
	
-- 9일차
-- 1번
SELECT DEPTNO, JOB, SUM(SAL) SUM_SAL
	FROM EMP e 
	WHERE DEPTNO IS NOT NULL
	GROUP BY ROLLUP(DEPTNO,JOB)
	ORDER BY DEPTNO;
	
-- 2번
SELECT DEPTNO, JOB, SUM(SAL)
	FROM EMP e 
	WHERE DEPTNO IS NOT NULL
	GROUP BY CUBE(DEPTNO, JOB)
	ORDER BY DEPTNO, JOB;
	
-- 3번	
SELECT 
	CASE GROUPING(DNAME) WHEN 0 THEN DNAME ELSE '합계' END DNAME,
	CASE 
		WHEN	 GROUPING(JOB)=0 THEN JOB
		WHEN GROUPING(JOB)=1 AND GROUPING(DNAME)=1 THEN ' '
		ELSE '소계'
	END JOB,
	SUM(SAL) SUM_SAL
	FROM EMP e JOIN DEPT d 
	USING(DEPTNO)
	WHERE DEPTNO IS NOT NULL
	GROUP BY ROLLUP(DNAME,JOB)
	ORDER BY DNAME, JOB;
	
-- 4번
SELECT 
	CASE RANK() OVER(PARTITION BY DNAME ORDER BY SUM_SAL)
		WHEN 1 THEN DNAME
		ELSE ' ' END DNAME,
	JOB, SUM_SAL
	FROM (
					SELECT
						CASE GROUPING(DNAME) WHEN 0 THEN DNAME ELSE '합계' END DNAME,
						CASE 
							WHEN	GROUPING(JOB)=0 THEN JOB
							WHEN GROUPING(JOB)=1 AND GROUPING(DNAME)=1 THEN ' '
							ELSE '소계'
						END JOB,
						SUM(SAL) SUM_SAL
						FROM EMP e JOIN DEPT d 
						USING(DEPTNO)
						WHERE DEPTNO IS NOT NULL
						GROUP BY ROLLUP(DNAME,JOB)
						ORDER BY DNAME, JOB);
						
-- 5번
SELECT 
	CASE RANK() OVER(PARTITION BY DNAME ORDER BY SUM_SAL)
		WHEN 1 THEN DNAME
		ELSE NULL END DNAME,
	JOB, SUM_SAL
	FROM (
					SELECT
						CASE GROUPING(DNAME) WHEN 0 THEN DNAME ELSE '합계' END DNAME,
						CASE 
							WHEN	GROUPING(JOB)=0 THEN JOB
							WHEN GROUPING(JOB)=1 AND GROUPING(DNAME)=1 THEN NULL
							ELSE '소계'
						END JOB,
						SUM(SAL) SUM_SAL
						FROM EMP e JOIN DEPT d 
						USING(DEPTNO)
						WHERE DEPTNO IS NOT NULL
							AND SAL >= 1000
						GROUP BY ROLLUP(DNAME,JOB)
						ORDER BY DNAME, JOB);
						
-- 10일차
-- 1번
SELECT MGR , EMPNO, ENAME,
	SYS_CONNECT_BY_PATH(ENAME, '>') AS  RELATION
	FROM EMP e
	START WITH MGR IS NULL -- 시작점 : MGR이 NULL인 애를 찾아서 그 EMPNO를 다음 MGR에 넣음
	CONNECT BY MGR = PRIOR EMPNO; -- 반복

SELECT LEVEL 
	FROM DUAL
	CONNECT BY LEVEL <= 12;

-- 2번
SELECT MGR , EMPNO, ENAME,
	SYS_CONNECT_BY_PATH(ENAME, '>') AS  RELATION
	FROM EMP e
	START WITH MGR = 7566
	CONNECT BY MGR = PRIOR EMPNO;
	
-- 3번
SELECT MGR , EMPNO, ENAME,
	SYS_CONNECT_BY_PATH(ENAME, '>') AS  RELATION
	FROM EMP e
	START WITH EMPNO IN ( SELECT MGR
							FROM EMP
							WHERE EMPNO=7499)
	CONNECT BY EMPNO = PRIOR MGR;
	
-- 4번
SELECT LEVEL AS DEPTH, 
	MGR , EMPNO, ENAME,
	SYS_CONNECT_BY_PATH(ENAME, '>') AS  RELATION
	FROM EMP e
	START WITH EMPNO IN (7698, 7782)
	CONNECT BY MGR = PRIOR EMPNO;
	
-- 5번
SELECT LEVEL AS DEPTH,  
	MGR , EMPNO, ENAME,
	SYS_CONNECT_BY_PATH(ENAME, '>') AS  RELATION
	FROM EMP e
	WHERE CONNECT_BY_ISLEAF = 1
	START WITH MGR IS NULL
	CONNECT BY MGR = PRIOR EMPNO;

-- 11일차

-- 1번
SELECT JOB, SUM(SAL) AS 급여합계
	FROM EMP e 
	WHERE JOB != 'SALESMAN'
	GROUP BY JOB
	HAVING SUM(SAL) > 5000;
	
-- 2번
SELECT DNAME, COUNT(*) AS 사원수, SUM(SAL)
	FROM EMP e JOIN DEPT d
	USING(DEPTNO)
	GROUP BY DNAME
	HAVING COUNT(*) > 2;
	
-- 3번
SELECT JOB, SUM(SAL)
	FROM EMP e
	GROUP BY JOB
	HAVING MIN(SAL)>1000;

SELECT JOB, SUM
	FROM
		(SELECT JOB, COUNT(*) CNT, SUM(SAL) SUM
			FROM EMP
			WHERE SAL > 1000
			GROUP BY JOB)
		JOIN
		(SELECT JOB, COUNT(*) CNT2
			FROM EMP e 
			GROUP BY JOB)
	USING(JOB)
	WHERE CNT=CNT2;
	
-- 12일차

-- 1번
SELECT EMPNO, ENAME, DNAME, LOC
	FROM EMP e LEFT OUTER JOIN DEPT d 
	ON e.DEPTNO = d.DEPTNO
	WHERE NOT LOC IN ('BOSTON', 'CHICAGO')
		OR LOC IS NULL;
	
SELECT EMPNO, ENAME, DNAME, LOC
	FROM EMP e LEFT OUTER JOIN DEPT d 
	ON e.DEPTNO = d.DEPTNO
	WHERE NOT EXISTS ( SELECT LOC
							FROM DEPT d2 
							WHERE d.DEPTNO = d2.DEPTNO  
								AND LOC IN('BOSTON', 'CHICAGO')
					)
	ORDER BY 3;

-- 2번
SELECT 
	LEVEL AS DEPTH,
	CONNECT_BY_ROOT EMPNO AS ROOT,
	MGR, EMPNO, ENAME,
	SYS_CONNECT_BY_PATH(ENAME,'>')
	FROM EMP e 
	START WITH MGR IS NULL
	CONNECT BY MGR = PRIOR EMPNO;


-- 3번
CREATE INDEX EMP_IDX ON EMP(EMPNO DESC);
-- 강제로 인덱스 태우기
SELECT /*+INDEX(EMP PK_EMP)*/ EMPNO, ENAME, JOB, TO_CHAR(HIREDATE, 'YY/MM/DD') HIREDATE, SAL, COMM, DEPTNO
	FROM EMP
	ORDER BY 1 DESC;
SELECT /*+INDEX_DESC(EMP EMP_IDX)*/ EMPNO, ENAME, JOB, TO_CHAR(HIREDATE, 'YY/MM/DD') HIREDATE, SAL, COMM, DEPTNO
	FROM EMP
	ORDER BY 1 DESC;
	
-- 13일차
-- 1번
SELECT 
	EMPNO, LEVEL,
	LPAD(' ', (LEVEL-1)*4) || ENAME AS ENAME,
	SUBSTR(SYS_CONNECT_BY_PATH(ENAME,'-'),2) FULL_ENAMES,
	SAL,
	(SELECT SUM(SAL)
		FROM EMP e 
		START WITH e.EMPNO = e1.EMPNO
		CONNECT BY PRIOR e.EMPNO = e.MGR) SUM_SAL
	FROM EMP e1 
	START WITH MGR IS NULL
	CONNECT BY MGR = PRIOR EMPNO;
	
-- 2번
SELECT 
	LEVEL,
	SUM(SAL) AS SALTOTAL,
	COUNT(*) AS EMPNCNT
	FROM EMP e 
	START WITH MGR IS NULL
	CONNECT BY MGR = PRIOR EMPNO
	GROUP BY (LEVEL);
	
-- 3번
SELECT 
	LPAD(' ', (LEVEL-1)*4) || JOB AS JOB,
	EMPNO,
	ENAME,
	MGR
	FROM EMP e 
	WHERE ROWNUM < 11
	START WITH MGR IS NULL
	CONNECT BY MGR = PRIOR EMPNO;
	
-- 4번
CREATE TABLE EMP_TEST 
AS SELECT EMPNO, DEPTNO, SAL FROM EMP WHERE DEPTNO IN (10, 20);

MERGE INTO EMP_TEST e 
	USING EMP e2
		ON(e.EMPNO = e2.EMPNO AND (e.DEPTNO='20' OR e.DEPTNO='30'))
WHEN MATCHED 
	THEN
		UPDATE SET e.SAL = e.SAL * 1.1
WHEN NOT MATCHED
	THEN
		INSERT (e.EMPNO, e.DEPTNO, e.SAL)
			VALUES(e2.EMPNO, e2.DEPTNO, e2.SAL)
				WHERE e2.DEPTNO='30' AND e2.SAL > 1000;
				
SELECT *
	FROM EMP_TEST;
	
DELETE FROM EMP_TEST WHERE DEPTNO = 30;

DROP TABLE EMP_TEST;

MERGE  INTO EMP_TEST e
   USING EMP e2
      ON(e.EMPNO = e2.EMPNO AND(e.DEPTNO='10' OR e.DEPTNO='20'))
WHEN MATCHED THEN 
   UPDATE SET e.SAL = e.SAL*1.1
   DELETE WHERE e.DEPTNO =20
WHEN NOT MATCHED THEN 
   INSERT (e.EMPNO, e.DEPTNO, e.SAL)
   VALUES(e2.EMPNO, e2.DEPTNO, e2.SAL*1.2);
			
SELECT *
	FROM EMP_TEST;